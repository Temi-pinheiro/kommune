/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AppRouteRouteImport } from './routes/app/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DemoTanstackQueryRouteImport } from './routes/demo.tanstack-query'
import { Route as AppShopIndexRouteImport } from './routes/app/shop/index'
import { Route as AppJobsIndexRouteImport } from './routes/app/jobs/index'
import { Route as AppHomeIndexRouteImport } from './routes/app/home/index'
import { Route as AppCommunityIndexRouteImport } from './routes/app/community/index'

const AppRouteRoute = AppRouteRouteImport.update({
  id: '/app',
  path: '/app',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoTanstackQueryRoute = DemoTanstackQueryRouteImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRouteImport,
} as any)
const AppShopIndexRoute = AppShopIndexRouteImport.update({
  id: '/shop/',
  path: '/shop/',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppJobsIndexRoute = AppJobsIndexRouteImport.update({
  id: '/jobs/',
  path: '/jobs/',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppHomeIndexRoute = AppHomeIndexRouteImport.update({
  id: '/home/',
  path: '/home/',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppCommunityIndexRoute = AppCommunityIndexRouteImport.update({
  id: '/community/',
  path: '/community/',
  getParentRoute: () => AppRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/app': typeof AppRouteRouteWithChildren
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/app/community': typeof AppCommunityIndexRoute
  '/app/home': typeof AppHomeIndexRoute
  '/app/jobs': typeof AppJobsIndexRoute
  '/app/shop': typeof AppShopIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/app': typeof AppRouteRouteWithChildren
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/app/community': typeof AppCommunityIndexRoute
  '/app/home': typeof AppHomeIndexRoute
  '/app/jobs': typeof AppJobsIndexRoute
  '/app/shop': typeof AppShopIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/app': typeof AppRouteRouteWithChildren
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/app/community/': typeof AppCommunityIndexRoute
  '/app/home/': typeof AppHomeIndexRoute
  '/app/jobs/': typeof AppJobsIndexRoute
  '/app/shop/': typeof AppShopIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/app'
    | '/demo/tanstack-query'
    | '/app/community'
    | '/app/home'
    | '/app/jobs'
    | '/app/shop'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/app'
    | '/demo/tanstack-query'
    | '/app/community'
    | '/app/home'
    | '/app/jobs'
    | '/app/shop'
  id:
    | '__root__'
    | '/'
    | '/app'
    | '/demo/tanstack-query'
    | '/app/community/'
    | '/app/home/'
    | '/app/jobs/'
    | '/app/shop/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppRouteRoute: typeof AppRouteRouteWithChildren
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app/shop/': {
      id: '/app/shop/'
      path: '/shop'
      fullPath: '/app/shop'
      preLoaderRoute: typeof AppShopIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/jobs/': {
      id: '/app/jobs/'
      path: '/jobs'
      fullPath: '/app/jobs'
      preLoaderRoute: typeof AppJobsIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/home/': {
      id: '/app/home/'
      path: '/home'
      fullPath: '/app/home'
      preLoaderRoute: typeof AppHomeIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/app/community/': {
      id: '/app/community/'
      path: '/community'
      fullPath: '/app/community'
      preLoaderRoute: typeof AppCommunityIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
  }
}

interface AppRouteRouteChildren {
  AppCommunityIndexRoute: typeof AppCommunityIndexRoute
  AppHomeIndexRoute: typeof AppHomeIndexRoute
  AppJobsIndexRoute: typeof AppJobsIndexRoute
  AppShopIndexRoute: typeof AppShopIndexRoute
}

const AppRouteRouteChildren: AppRouteRouteChildren = {
  AppCommunityIndexRoute: AppCommunityIndexRoute,
  AppHomeIndexRoute: AppHomeIndexRoute,
  AppJobsIndexRoute: AppJobsIndexRoute,
  AppShopIndexRoute: AppShopIndexRoute,
}

const AppRouteRouteWithChildren = AppRouteRoute._addFileChildren(
  AppRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppRouteRoute: AppRouteRouteWithChildren,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
